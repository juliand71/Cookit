@page
@model Cookit.WebApp.Pages.Recipes.CreateModel
@using Cookit.WebApp.Components
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-10">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Recipe.Title" class="control-label"></label>
                <input asp-for="Recipe.Title" class="form-control" />
                <span asp-validation-for="Recipe.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.Description" class="control-label"></label>
                <input asp-for="Recipe.Description" class="form-control" />
                <span asp-validation-for="Recipe.Description" class="text-danger"></span>
            </div>
            <div class="form-group" id="eq-form-group">
                <label class="control-label">Equipment</label>

                <div class="input-list" id="eq-input-list">
                    <div class="variable-input-group">
                        <label>Name</label>
                        <input type="text" name="EquipmentName"/>
                        <button type="button" class="remove-btn">Remove</button>
                    </div>
                </div>

                <button type="button" class="add-btn">Add</button>
            </div>
            <div class="form-group" id="ing-form-group">
                <label class="control-label">Instructions</label>

                <div class="input-list" id="ing-input-list">
                    <div class="variable-input-group">
                        <label>Ingredient</label>
                        <input type="text" name="IngredientName"/>
                        <label>Amount</label>
                        <input type="number" name="IngredientAmount"/>
                        <label>Unit</label>
                        <input type="text" name="IngredientUnit"/>
                        <button type="button" class="remove-btn">Remove</button>
                    </div>
                </div>

                <button type="button" class="add-btn">Add</button>
            </div>
            <div class="form-group" id="instr-form-group">
                <label class="control-label">Instructions</label>

                <div class="input-list" id="instr-input-list">
                    <div class="variable-input-group">
                        <label>Step</label>
                        <input type="number" name="InstructionStep"/>
                        <label>Description</label>
                        <input type="text" name="InstructionDescription"/>
                        <button type="button" class="remove-btn">Remove</button>
                    </div>
                </div>

                <button type="button" class="add-btn">Add</button>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        // jQuery used for dynamically adding and removing input fields
        $(function () {
            $('.input-list').on('click', '.remove-btn', function (e) {
                e.preventDefault();
                $removeGroup = $(e.target).parent();
                $removeGroup.remove();
            })

            $('.add-btn').on('click', function (e) {
                e.preventDefault();
                var $formGroup = $(e.target).parent();
                var $inputList = $formGroup.children('.input-list');
                var $newInputGroup = $inputList.children('.variable-input-group').first().clone().appendTo($inputList);
                $newInputGroup.children('input').val("");
            });

        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
